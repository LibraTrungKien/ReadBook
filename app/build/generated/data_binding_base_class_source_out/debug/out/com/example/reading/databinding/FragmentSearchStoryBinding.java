// Generated by view binder compiler. Do not edit!
package com.example.reading.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.epoxy.EpoxyRecyclerView;
import com.example.reading.R;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchStoryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final Chip btnFairyTales;

  @NonNull
  public final Chip btnFairyTalesVi;

  @NonNull
  public final Chip btnFolkTale;

  @NonNull
  public final Chip btnGhost;

  @NonNull
  public final Chip btnJokes;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final EditText edtSearch;

  @NonNull
  public final EpoxyRecyclerView lstStory;

  @NonNull
  public final LinearLayout lyt1;

  @NonNull
  public final TextView txtHistory;

  private FragmentSearchStoryBinding(@NonNull LinearLayout rootView, @NonNull ImageView btnBack,
      @NonNull Chip btnFairyTales, @NonNull Chip btnFairyTalesVi, @NonNull Chip btnFolkTale,
      @NonNull Chip btnGhost, @NonNull Chip btnJokes, @NonNull ChipGroup chipGroup,
      @NonNull EditText edtSearch, @NonNull EpoxyRecyclerView lstStory, @NonNull LinearLayout lyt1,
      @NonNull TextView txtHistory) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnFairyTales = btnFairyTales;
    this.btnFairyTalesVi = btnFairyTalesVi;
    this.btnFolkTale = btnFolkTale;
    this.btnGhost = btnGhost;
    this.btnJokes = btnJokes;
    this.chipGroup = chipGroup;
    this.edtSearch = edtSearch;
    this.lstStory = lstStory;
    this.lyt1 = lyt1;
    this.txtHistory = txtHistory;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchStoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchStoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search_story, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchStoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnFairyTales;
      Chip btnFairyTales = ViewBindings.findChildViewById(rootView, id);
      if (btnFairyTales == null) {
        break missingId;
      }

      id = R.id.btnFairyTalesVi;
      Chip btnFairyTalesVi = ViewBindings.findChildViewById(rootView, id);
      if (btnFairyTalesVi == null) {
        break missingId;
      }

      id = R.id.btnFolkTale;
      Chip btnFolkTale = ViewBindings.findChildViewById(rootView, id);
      if (btnFolkTale == null) {
        break missingId;
      }

      id = R.id.btnGhost;
      Chip btnGhost = ViewBindings.findChildViewById(rootView, id);
      if (btnGhost == null) {
        break missingId;
      }

      id = R.id.btnJokes;
      Chip btnJokes = ViewBindings.findChildViewById(rootView, id);
      if (btnJokes == null) {
        break missingId;
      }

      id = R.id.chipGroup;
      ChipGroup chipGroup = ViewBindings.findChildViewById(rootView, id);
      if (chipGroup == null) {
        break missingId;
      }

      id = R.id.edtSearch;
      EditText edtSearch = ViewBindings.findChildViewById(rootView, id);
      if (edtSearch == null) {
        break missingId;
      }

      id = R.id.lstStory;
      EpoxyRecyclerView lstStory = ViewBindings.findChildViewById(rootView, id);
      if (lstStory == null) {
        break missingId;
      }

      id = R.id.lyt1;
      LinearLayout lyt1 = ViewBindings.findChildViewById(rootView, id);
      if (lyt1 == null) {
        break missingId;
      }

      id = R.id.txtHistory;
      TextView txtHistory = ViewBindings.findChildViewById(rootView, id);
      if (txtHistory == null) {
        break missingId;
      }

      return new FragmentSearchStoryBinding((LinearLayout) rootView, btnBack, btnFairyTales,
          btnFairyTalesVi, btnFolkTale, btnGhost, btnJokes, chipGroup, edtSearch, lstStory, lyt1,
          txtHistory);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
