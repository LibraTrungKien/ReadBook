// Generated by view binder compiler. Do not edit!
package com.example.reading.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.epoxy.EpoxyRecyclerView;
import com.example.reading.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStoryBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView btnAddFavourite;

  @NonNull
  public final TextView btnComment;

  @NonNull
  public final TextView btnRate;

  @NonNull
  public final TextView btnReadStory;

  @NonNull
  public final EditText edtComment;

  @NonNull
  public final ImageView img5Star;

  @NonNull
  public final ImageView imgStar1;

  @NonNull
  public final ImageView imgStar2;

  @NonNull
  public final ImageView imgStar3;

  @NonNull
  public final ImageView imgStar4;

  @NonNull
  public final ImageView imgStory;

  @NonNull
  public final LinearLayout linStar;

  @NonNull
  public final EpoxyRecyclerView lstChapter;

  @NonNull
  public final RecyclerView lstComment;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView txtAuthor;

  @NonNull
  public final TextView txtCategory;

  @NonNull
  public final TextView txtChapter;

  @NonNull
  public final TextView txtCreatedDate;

  @NonNull
  public final TextView txtDescription;

  @NonNull
  public final TextView txtRate;

  private FragmentStoryBinding(@NonNull ScrollView rootView, @NonNull TextView btnAddFavourite,
      @NonNull TextView btnComment, @NonNull TextView btnRate, @NonNull TextView btnReadStory,
      @NonNull EditText edtComment, @NonNull ImageView img5Star, @NonNull ImageView imgStar1,
      @NonNull ImageView imgStar2, @NonNull ImageView imgStar3, @NonNull ImageView imgStar4,
      @NonNull ImageView imgStory, @NonNull LinearLayout linStar,
      @NonNull EpoxyRecyclerView lstChapter, @NonNull RecyclerView lstComment,
      @NonNull MaterialToolbar toolbar, @NonNull TextView txtAuthor, @NonNull TextView txtCategory,
      @NonNull TextView txtChapter, @NonNull TextView txtCreatedDate,
      @NonNull TextView txtDescription, @NonNull TextView txtRate) {
    this.rootView = rootView;
    this.btnAddFavourite = btnAddFavourite;
    this.btnComment = btnComment;
    this.btnRate = btnRate;
    this.btnReadStory = btnReadStory;
    this.edtComment = edtComment;
    this.img5Star = img5Star;
    this.imgStar1 = imgStar1;
    this.imgStar2 = imgStar2;
    this.imgStar3 = imgStar3;
    this.imgStar4 = imgStar4;
    this.imgStory = imgStory;
    this.linStar = linStar;
    this.lstChapter = lstChapter;
    this.lstComment = lstComment;
    this.toolbar = toolbar;
    this.txtAuthor = txtAuthor;
    this.txtCategory = txtCategory;
    this.txtChapter = txtChapter;
    this.txtCreatedDate = txtCreatedDate;
    this.txtDescription = txtDescription;
    this.txtRate = txtRate;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_story, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddFavourite;
      TextView btnAddFavourite = ViewBindings.findChildViewById(rootView, id);
      if (btnAddFavourite == null) {
        break missingId;
      }

      id = R.id.btnComment;
      TextView btnComment = ViewBindings.findChildViewById(rootView, id);
      if (btnComment == null) {
        break missingId;
      }

      id = R.id.btnRate;
      TextView btnRate = ViewBindings.findChildViewById(rootView, id);
      if (btnRate == null) {
        break missingId;
      }

      id = R.id.btnReadStory;
      TextView btnReadStory = ViewBindings.findChildViewById(rootView, id);
      if (btnReadStory == null) {
        break missingId;
      }

      id = R.id.edtComment;
      EditText edtComment = ViewBindings.findChildViewById(rootView, id);
      if (edtComment == null) {
        break missingId;
      }

      id = R.id.img_5_star;
      ImageView img5Star = ViewBindings.findChildViewById(rootView, id);
      if (img5Star == null) {
        break missingId;
      }

      id = R.id.img_star_1;
      ImageView imgStar1 = ViewBindings.findChildViewById(rootView, id);
      if (imgStar1 == null) {
        break missingId;
      }

      id = R.id.img_star_2;
      ImageView imgStar2 = ViewBindings.findChildViewById(rootView, id);
      if (imgStar2 == null) {
        break missingId;
      }

      id = R.id.img_star_3;
      ImageView imgStar3 = ViewBindings.findChildViewById(rootView, id);
      if (imgStar3 == null) {
        break missingId;
      }

      id = R.id.img_star_4;
      ImageView imgStar4 = ViewBindings.findChildViewById(rootView, id);
      if (imgStar4 == null) {
        break missingId;
      }

      id = R.id.imgStory;
      ImageView imgStory = ViewBindings.findChildViewById(rootView, id);
      if (imgStory == null) {
        break missingId;
      }

      id = R.id.lin_star;
      LinearLayout linStar = ViewBindings.findChildViewById(rootView, id);
      if (linStar == null) {
        break missingId;
      }

      id = R.id.lstChapter;
      EpoxyRecyclerView lstChapter = ViewBindings.findChildViewById(rootView, id);
      if (lstChapter == null) {
        break missingId;
      }

      id = R.id.lstComment;
      RecyclerView lstComment = ViewBindings.findChildViewById(rootView, id);
      if (lstComment == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.txtAuthor;
      TextView txtAuthor = ViewBindings.findChildViewById(rootView, id);
      if (txtAuthor == null) {
        break missingId;
      }

      id = R.id.txtCategory;
      TextView txtCategory = ViewBindings.findChildViewById(rootView, id);
      if (txtCategory == null) {
        break missingId;
      }

      id = R.id.txtChapter;
      TextView txtChapter = ViewBindings.findChildViewById(rootView, id);
      if (txtChapter == null) {
        break missingId;
      }

      id = R.id.txtCreatedDate;
      TextView txtCreatedDate = ViewBindings.findChildViewById(rootView, id);
      if (txtCreatedDate == null) {
        break missingId;
      }

      id = R.id.txtDescription;
      TextView txtDescription = ViewBindings.findChildViewById(rootView, id);
      if (txtDescription == null) {
        break missingId;
      }

      id = R.id.txtRate;
      TextView txtRate = ViewBindings.findChildViewById(rootView, id);
      if (txtRate == null) {
        break missingId;
      }

      return new FragmentStoryBinding((ScrollView) rootView, btnAddFavourite, btnComment, btnRate,
          btnReadStory, edtComment, img5Star, imgStar1, imgStar2, imgStar3, imgStar4, imgStory,
          linStar, lstChapter, lstComment, toolbar, txtAuthor, txtCategory, txtChapter,
          txtCreatedDate, txtDescription, txtRate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
